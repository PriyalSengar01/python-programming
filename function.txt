Q1. Write a Python function to find the Max of three numbers:

    number = [1,2,3]
    def max_of_3n(number):
    fine_max_number = max(number)
    return fine_max_number

    print max_of_3n(number)
Q2. Write a program to find the  average of all the numbers in a given tuple using function where the no. are not necessary in the tuple.
    def fun(*a)
      sum=0
    for i in a:
       sum+=i
    avg=sum/len(a)
     return avg
   print(fun(1,2,3,4))
Q3.Write in python using function to check whether the given no. is palindrome or not.
      num=input (‘Enter any number: ’)
	try:
	val=int (num)
	if num==str (num) [::-1]:
	print(‘The given number is PALINDROME’)
	else:
	print(‘The given number is NOT a PALINDROME’)
	except ValueError:
	print(“That’s not a valid number, Try Again!”)
Q4.Write in python using function to check prime no. i
      prime_numbers = 0
      def is_prime_number(x):
    	if x >= 2:
          for y in range(2,x):
            if not ( x % y ):
                return False
        else:
	   return False
        return True
	        

     for i in range(int(raw_input("How many numbers you wish to check: "))):
        if is_prime_number(i):
          prime_numbers += 1
          print i

     print "We found " + str(prime_numbers) + " prime numbers."
Q5.Return multiple values from a function.                                          
     def calculation(a, b):

     res = calculation(40, 10)
     print(res) 
Q6.Assign a different name to function and call it through the new name.                                       
    def display_student(name, age):
    	print(name, age)

    display_student("Emma", 26)
Q7.Python program to check Armstrong number using functions Example:-
    num=int (input (“Enter a number :”))
    sum=0
    temp=num
    while temp>0:
    digit=temp%10
    sum+=digit**3
    temp//=10
    if num==sum:
    print(num,”is an Armstrong number”)
    else:
    print(num,”is not an Armstrong number”)
Q8.Write a python program to check whether given is factorial or not. 
   def recur_factorial(n):  
   	if n == 1:  
       	    return n  
        else:  
            return n*recur_factorial(n-1)  
   # take input from the user  
   num = int(input("Enter a number: "))  
   # check is the number is negative  
   if num < 0:  
        print("Sorry, factorial does not exist for negative numbers")  
   elif num == 0:  
        print("The factorial of 0 is 1")  
   else:  
        print("The factorial of",num,"is",recur_factorial(num)) 
Q9.Write a Python Program to Convert Decimal to Binary, Octal and Hexadecimal 
   def decimal_into_binary(decimal_1):  
     decimal = int(decimal_1)   
     print ("The given decimal number", decimal, "in Binary number is: ", bin(decimal))   
   def decimal_into_octal(decimal_1):  
     decimal = int(decimal_1)  
     print ("The given decimal number", decimal, "in Octal number is: ", oct(decimal))    
  def decimal_into_hexadecimal(decimal_1):  
     decimal = int(decimal_1)    
     print ("The given decimal number", decimal, " in Hexadecimal number is: ", hex(decimal))    
     decimal_1 = int (input (" Enter the Decimal Number: "))  
     decimal_into_binary(decimal_1)  
     decimal_into_octal(decimal_1)  
     decimal_into_hexadecimal(decimal_1)
Q10.Write a Python function to find the Max of three numbers.
   def max_of_two( x, y ):
    if x > y:
        return x
    return y
   def max_of_three( x, y, z ):
    return max_of_two( x, max_of_two( y, z ) )
   print(max_of_three(3, 6, -5)